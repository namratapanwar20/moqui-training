<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <service verb="create" type="entity-auto" noun="Training">
        <description>
            1. The entity-auto service for creating records.
        </description>
        <in-parameters>
            <auto-parameters entity-name="org.moqui.Training"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
    </service>
    <service verb="create" noun="Id">
        <description>
            2. Service with default-type to create records for the entity
        </description>
        <in-parameters>
            <auto-parameters entity-name="org.moqui.Training" include="nonpk"/>
            <parameter name="trainingId" required="true"/>
        </in-parameters>
        <out-parameters><parameter name="trainingId"/></out-parameters>
        <actions>
            <service-call name="create#org.moqui.Training" in-map="context" out-map="context"/>
        </actions>
    </service>
    <service verb="create" noun="MoquiTrainingGroovy" type="script"
             location="component://moqui-training/service/Training.groovy">
        <description>
            3. Service with implementation logic in a groovy script to create data.
        </description>
        <in-parameters>
            <auto-parameters entity-name="org.moqui.Training"/>
            <parameter name="trainingId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
    </service>
    <service verb="get" noun="MoquiRecords">
        <in-parameters>
            <parameter name="trainingId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainedList"/>
        </out-parameters>

        <actions>
            <entity-find entity-name="org.moqui.Training" list="trainedList">
                <econdition field-name="trainingId"/>
                <select-field field-name="trainingId, trainingName, trainingDate"/>
            </entity-find>
        </actions>
    </service>
    <service verb="get" noun="MoquiTraining">
        <in-parameters>
            <parameter name="trainingId"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" type="Date"/>
            <parameter name="trainingPrice"/>
            <parameter name="trainingDuration"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="org.moqui.Training" value-field="trainingList">
                <field-map field-name="trainingName"/>
                <field-map field-name="trainingId"/>
            </entity-find-one>

            <if condition="trainingList!=Null " >
                <then>
                    <service-call name="update#org.moqui.Training" in-map="context" out-map="context"/>
                </then>
                <else>
                    <service-call name="create#org.moqui.Training" in-map="context" out-map="context"/>
                </else>
            </if>
        </actions>
    </service>
</services>